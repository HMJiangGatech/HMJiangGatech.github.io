<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on Haoming Jiang</title>
    <link>https://hmjianggatech.github.io/notes/</link>
    <description>Recent content in Notes on Haoming Jiang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Jun 2020 17:00:11 -0400</lastBuildDate>
    
	<atom:link href="https://hmjianggatech.github.io/notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Offline Policy Evaluation and a Case Study in Dialogue System</title>
      <link>https://hmjianggatech.github.io/notes/ope/</link>
      <pubDate>Tue, 09 Jun 2020 17:00:11 -0400</pubDate>
      
      <guid>https://hmjianggatech.github.io/notes/ope/</guid>
      <description>Problem Setting  Problem Definition: Evaluate a policy without interaction with environment.
What do we have:
(i) historical data \(\pi\): \( \mathcal{D}=\{s_i,a_i,r_i,s_i&amp;rsquo;\} \) (state, action, reward) pairs of one or more policies ( \( \mu_1, \mu_2, \mu_3, &amp;hellip; \) ) interacting with environment.
(ii) A target policy \(\pi\) (optional) Expert policies \( \mu_1, \mu_2, \mu_3, &amp;hellip; \) may or may not be accessible. In a more general setting, they are not accessible (e.</description>
    </item>
    
    <item>
      <title>Google Cloud CheatSheet</title>
      <link>https://hmjianggatech.github.io/notes/google_cloud/</link>
      <pubDate>Mon, 18 May 2020 15:02:12 -0400</pubDate>
      
      <guid>https://hmjianggatech.github.io/notes/google_cloud/</guid>
      <description>See more in link
Step 1: install nd setup gcloud SDK tutorial
Step 2: create vm export IMAGE_FAMILY=&amp;#34;tf-latest-cu92&amp;#34; export ZONE=&amp;#34;us-west1-b&amp;#34; export INSTANCE_NAME=&amp;#34;my-new-instance&amp;#34; export INSTANCE_TYPE=&amp;#34;n1-standard-8&amp;#34; export DISKSIZE=&amp;#34;120GB&amp;#34; gcloud compute instances create $INSTANCE_NAME \  --zone=$ZONE \  --image-family=$IMAGE_FAMILY \  --image-project=deeplearning-platform-release \  --maintenance-policy=TERMINATE \  --accelerator=&amp;#34;type=nvidia-tesla-v100,count=8&amp;#34; \  --machine-type=$INSTANCE_TYPE \  --boot-disk-size=$DISKSIZE \  --metadata=&amp;#34;install-nvidia-driver=True&amp;#34; Step 3: control your vm  list vm:  gcloud compute instances list  vm status  gcloud compute instances describe $INSTANCE_NAME  access vm  gcloud compute ssh $INSTANCE_NAME  stop vm  gcloud compute instances stop $INSTANCE_NAME  start vm  gcloud compute instances start $INSTANCE_NAME  delete vm  gcloud compute instances delete $INSTANCE_NAME </description>
    </item>
    
    <item>
      <title>Docker Cheatsheet</title>
      <link>https://hmjianggatech.github.io/notes/docker/</link>
      <pubDate>Sat, 16 May 2020 00:15:48 -0400</pubDate>
      
      <guid>https://hmjianggatech.github.io/notes/docker/</guid>
      <description>Docker Introduction from docker.com
docker run -it --rm \ -v ~/project/MNLI:/work/MNLI \ -v ~/.ssh:/root/.ssh \ -v /mnt:/work/data \ --privileged docker-image:tag bash Run a docker image docker run -it --rmÂ -v /local_dir:/docker_dir docker-image:tag bash  -it: interactive mode --rm: clean up after exit -v: volume (shared filesystems)  Attach to a running docker container docker ps docker exec -it container_name bash File Permission Issue All files created by the docker is owned by root.</description>
    </item>
    
  </channel>
</rss>